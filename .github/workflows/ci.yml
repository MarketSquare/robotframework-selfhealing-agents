# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: ci

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  test:
    env:
      AZURE_API_KEY: ${{ secrets.AZURE_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      BASE_URL: ${{ vars.BASE_URL }}
      ORCHESTRATOR_AGENT_MODEL: ${{ vars.ORCHESTRATOR_AGENT_MODEL }}
      LOCATOR_AGENT_MODEL: ${{ vars.LOCATOR_AGENT_MODEL }}
      ORCHESTRATOR_AGENT_PROVIDER: ${{ vars.ORCHESTRATOR_AGENT_PROVIDER }}
      LOCATOR_AGENT_PROVIDER: ${{ vars.LOCATOR_AGENT_PROVIDER }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.2
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/.virtualenvs
          installer-parallel: true
      - name: Install dependencies
        run: |
          poetry install
          poetry run pip install robotframework-browser robotframework-seleniumlibrary
          poetry run rfbrowser init
          npx playwright install-deps
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Run tests
        run: |
          poetry run invoke tests
      - name: Store Artifact
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: test-results ${{ matrix.python-version }} # Choose a descriptive name for your artifact
          path: |
            results/*.html
            results/*.xml
            results/*.prof
            results/*.txt
      - name: Test Report
        uses: dorny/test-reporter@v2
        if: success() || failure() # run this step even if previous step failed
        with:
          name: xUnit Tests ${{ matrix.python-version }} # Name of the check run which will be created
          path: results/pytest.xml,results/xunit.xml # Path to test results
          reporter: java-junit # Format of test results
